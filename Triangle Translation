import numpy as np                 # v 1.19.2
import matplotlib.pyplot as plt    # v 3.3.2


# Enter x and y coordinates of points and colors for the first triangle
x=[1 ,2 ,5]
y=[1, 3, 2]
colors = ['g', 'g', 'g']
l=["A", "B", "C"]

# Set x and y coordinates of points and colors for the IMAGE triangle
xa=[-1 ,-2 ,-5]
ya=[-1, -3, -2]
colorsa = ['b', 'b', 'b']
la=["A'", "B'", "C'"]

# Define the function to draw the lines between the initial triangle
def connectpoints(x,y,p1,p2):
    x1, x2 = x[p1], x[p2]
    y1, y2 = y[p1], y[p2]
    plt.plot([x1,x2],[y1,y2], 'g-')
    
# Define the function to draw the lines between the IMAGE triangle
def connectpointsa(x,y,p1,p2):
    x1, x2 = xa[p1], xa[p2]
    y1, y2 = ya[p1], ya[p2]
    plt.plot([x1,x2],[y1,y2], 'b-')

# Select length of axes and the space between tick labels
xmin, xmax, ymin, ymax = -5, 5, -5, 5
ticks_frequency = 5

# Plot points for both traingles
fig, ax = plt.subplots(figsize=(5, 5))
ax.scatter(x, y, c=colors)
ax.scatter(xa, ya, c=colorsa)
    
# Labels for the first triangle
for i, txt in enumerate(l):
    plt.annotate(txt, (x[i]-.3, y[i]+.3))
    
# Labels for the IMAGE triangle
for i, txt in enumerate(la):
    plt.annotate(txt, (xa[i]+.3, ya[i]+.3))
    
# Set identical scales for both axes
ax.set(xlim=(xmin-1, xmax+1), ylim=(ymin-1, ymax+1), aspect='equal')

# Set bottom and left spines as x and y axes of coordinate system
ax.spines['bottom'].set_position('zero')
ax.spines['left'].set_position('zero')

# Remove top and right spines
ax.spines['top'].set_visible(False)
ax.spines['right'].set_visible(False)

# Create 'x' and 'y' labels placed at the end of the axes
ax.set_xlabel('x', size=14, labelpad=-24, x=1.03)
ax.set_ylabel('y', size=14, labelpad=-21, y=1.02, rotation=0)

# Create custom major ticks to determine position of tick labels
x_ticks = np.arange(xmin, xmax+1, ticks_frequency)
y_ticks = np.arange(ymin, ymax+1, ticks_frequency)
ax.set_xticks(x_ticks[x_ticks != 0])
ax.set_yticks(y_ticks[y_ticks != 0])

# Create minor ticks placed at each integer to enable drawing of minor grid
# lines: note that this has no effect in this example with ticks_frequency=1
ax.set_xticks(np.arange(xmin, xmax+1), minor=True)
ax.set_yticks(np.arange(ymin, ymax+1), minor=True)

# Draw major and minor grid lines
ax.grid(which='both', color='grey', linewidth=1, linestyle='-', alpha=0.2)

# Draw arrows
arrow_fmt = dict(markersize=4, color='black', clip_on=False)
ax.plot((1), (0), marker='>', transform=ax.get_yaxis_transform(), **arrow_fmt)
ax.plot((0), (1), marker='^', transform=ax.get_xaxis_transform(), **arrow_fmt)

#draw the lines for the first triangle
connectpoints(x,y,0,1)
connectpoints(x,y,1,2)
connectpoints(x,y,0,2)

#draw the lines for the IMAGE triangle
connectpointsa(xa,ya,0,1)
connectpointsa(xa,ya,1,2)
connectpointsa(xa,ya,0,2)

plt.show()
